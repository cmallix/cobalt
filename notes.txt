# Tests.

I've added tests for the utility functions I created.
I think it's important to test pure functions that take a number of arguments and return a value.
Generally anything that affects the state should be tested.

You can add tests for DOM elements such checking an input text field has been cleared after submitting a form,
or that you can not submit the form with an empty string ect, however I did not add those tests for this demo.

Animation, layout and responsiveness would need to be bested by QA.
It's worth noting that regression tests are a good idea for user-facing features.

# General.

I did not create a dummy POST, GET requests.
I save the changed state in memory and I'm loading the high scores from file.

I would request the API endpoints to be,

- GET /top-ten should return a SORTED array of the top ten scores.
I would prefer not to sort the data on the front end; this is better handled in SQL.

- GET /scores should return an UNSORTED array of all the scores submitted.
This endpoint is not needed for the demo app but it would be nice to have.

- POST /score ; would post a JSON object of this shape { name: string, score: number, clicks: number, average: number }
